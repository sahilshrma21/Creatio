namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BaseCountTermSchema

	/// <exclude/>
	public class BaseCountTermSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseCountTermSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseCountTermSchema(BaseCountTermSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2bc19a40-e2b8-4afc-a039-d55edec8109f");
			Name = "BaseCountTerm";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,197,85,203,110,219,48,16,60,59,64,254,97,235,92,28,32,144,239,121,8,72,157,54,8,208,2,65,227,182,103,90,90,43,68,41,210,32,41,7,110,208,127,239,46,105,202,178,19,57,62,164,232,37,1,169,25,237,236,104,118,173,69,141,110,33,10,132,41,90,43,156,153,251,108,98,244,92,86,141,21,94,26,157,77,132,66,93,10,235,142,143,158,143,143,6,141,147,186,130,135,149,243,88,95,236,156,137,169,20,22,76,115,217,45,106,180,178,216,96,122,10,16,128,32,39,22,43,58,192,68,9,231,224,28,62,10,135,19,211,104,79,172,58,32,198,227,49,92,186,166,174,133,93,229,235,115,64,128,39,8,204,136,0,5,179,179,4,30,119,208,139,102,166,100,1,98,230,188,21,133,143,200,221,42,131,231,80,169,21,115,111,205,2,173,151,232,206,225,62,188,32,62,223,149,18,181,176,0,38,114,5,110,12,74,225,49,107,241,93,53,73,206,82,90,223,8,5,55,132,156,202,26,225,91,135,207,151,192,150,15,6,21,250,11,112,244,135,79,127,246,136,120,240,198,162,139,142,20,66,21,141,138,82,148,169,220,126,41,236,192,100,195,248,98,170,240,174,222,251,126,97,39,20,151,104,224,182,155,95,209,63,154,146,173,180,198,83,74,176,140,207,23,233,216,218,177,52,178,4,170,212,169,123,167,169,167,165,80,110,116,247,73,55,53,90,49,83,120,121,151,194,121,35,86,57,249,189,114,103,80,26,106,8,193,147,157,215,53,127,219,211,181,86,57,135,81,95,55,31,174,64,55,74,37,232,64,227,211,43,157,87,104,251,222,112,154,125,150,74,189,34,120,20,85,117,228,4,175,216,172,67,29,131,3,210,119,139,158,63,120,48,3,158,16,127,57,16,117,156,14,3,21,143,98,127,24,195,205,66,88,81,131,166,117,112,53,100,201,195,60,121,27,124,205,46,199,1,241,58,129,250,108,112,152,255,224,127,92,48,69,15,95,210,44,250,198,106,151,71,51,192,204,163,90,2,166,39,157,80,182,227,42,9,74,45,254,100,104,24,216,55,99,192,140,32,235,244,98,143,109,215,5,7,78,254,198,141,121,76,135,185,177,221,249,249,103,198,149,235,193,15,164,118,90,23,114,105,252,22,113,215,143,48,33,173,120,106,219,141,44,206,225,45,83,218,61,147,234,238,53,39,73,218,192,97,182,106,141,250,239,158,188,71,10,91,89,60,159,111,100,176,53,175,245,229,157,66,72,193,166,149,253,24,119,22,52,90,250,190,93,253,162,229,244,49,134,249,244,113,147,225,253,54,209,79,154,164,173,18,41,235,67,191,67,211,86,19,20,60,120,135,13,42,179,190,51,105,212,218,178,99,80,210,122,182,21,218,228,113,218,158,121,18,152,12,220,89,149,113,129,110,95,210,221,95,114,178,245,147,214,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2bc19a40-e2b8-4afc-a039-d55edec8109f"));
		}

		#endregion

	}

	#endregion

}

