"use strict";(self.webpackChunkapp_studio_enterprise_web_service=self.webpackChunkapp_studio_enterprise_web_service||[]).push([[432],{37432:(l,a,n)=>{n.r(a),n.d(a,{CodemirrorComponent:()=>i,CodemirrorModule:()=>s});var r=n(36599),c=n(20092);const d=["ref"];function u(t){return t&&t.replace(/\r\n|\r/g,"\n")}class i{constructor(e,o){this._differs=e,this._ngZone=o,this.className="",this.name="codemirror",this.autoFocus=!1,this.preserveScrollPosition=!1,this.cursorActivity=new r.EventEmitter,this.focusChange=new r.EventEmitter,this.scroll=new r.EventEmitter,this.drop=new r.EventEmitter,this.value="",this.disabled=!1,this.isFocused=!1,this.onChange=_=>{},this.onTouched=()=>{}}set options(e){this._options=e,!this._differ&&e&&(this._differ=this._differs.find(e).create())}get codeMirrorGlobal(){return this._codeMirror||(this._codeMirror=typeof CodeMirror<"u"?CodeMirror:n(27476)),this._codeMirror}ngAfterViewInit(){this.ref&&this._ngZone.runOutsideAngular(()=>{this.codeMirror=this.codeMirrorGlobal.fromTextArea(this.ref.nativeElement,this._options),this.codeMirror.on("cursorActivity",e=>this._ngZone.run(()=>this.cursorActive(e))),this.codeMirror.on("scroll",this.scrollChanged.bind(this)),this.codeMirror.on("blur",()=>this._ngZone.run(()=>this.focusChanged(!1))),this.codeMirror.on("focus",()=>this._ngZone.run(()=>this.focusChanged(!0))),this.codeMirror.on("change",(e,o)=>this._ngZone.run(()=>this.codemirrorValueChanged(e,o))),this.codeMirror.on("drop",(e,o)=>{this._ngZone.run(()=>this.dropFiles(e,o))}),this.codeMirror.setValue(this.value)})}ngDoCheck(){if(!this._differ)return;const e=this._differ.diff(this._options);e&&(e.forEachChangedItem(o=>this.setOptionIfChanged(o.key,o.currentValue)),e.forEachAddedItem(o=>this.setOptionIfChanged(o.key,o.currentValue)),e.forEachRemovedItem(o=>this.setOptionIfChanged(o.key,o.currentValue)))}ngOnDestroy(){this.codeMirror&&this.codeMirror.toTextArea()}codemirrorValueChanged(e,o){"setValue"!==o.origin&&(this.value=e.getValue(),this.onChange(this.value))}setOptionIfChanged(e,o){this.codeMirror&&this.codeMirror.setOption(e,o)}focusChanged(e){this.onTouched(),this.isFocused=e,this.focusChange.emit(e)}scrollChanged(e){this.scroll.emit(e.getScrollInfo())}cursorActive(e){this.cursorActivity.emit(e)}dropFiles(e,o){this.drop.emit([e,o])}writeValue(e){if(null==e)return;if(!this.codeMirror)return void(this.value=e);const o=this.codeMirror.getValue();if(e!==o&&u(o)!==u(e))if(this.value=e,this.preserveScrollPosition){const _=this.codeMirror.getScrollInfo();this.codeMirror.setValue(this.value),this.codeMirror.scrollTo(_.left,_.top)}else this.codeMirror.setValue(this.value)}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this.disabled=e,this.setOptionIfChanged("readOnly",this.disabled)}}i.\u0275fac=function(e){return new(e||i)(r.\u0275\u0275directiveInject(r.KeyValueDiffers),r.\u0275\u0275directiveInject(r.NgZone))},i.\u0275cmp=r.\u0275\u0275defineComponent({type:i,selectors:[["ngx-codemirror"]],viewQuery:function(e,o){if(1&e&&r.\u0275\u0275viewQuery(d,7),2&e){let _;r.\u0275\u0275queryRefresh(_=r.\u0275\u0275loadQuery())&&(o.ref=_.first)}},inputs:{className:"className",name:"name",autoFocus:"autoFocus",preserveScrollPosition:"preserveScrollPosition",options:"options"},outputs:{cursorActivity:"cursorActivity",focusChange:"focusChange",scroll:"scroll",drop:"drop"},features:[r.\u0275\u0275ProvidersFeature([{provide:c.JU,useExisting:(0,r.forwardRef)(()=>i),multi:!0}])],decls:3,vars:7,consts:[["autocomplete","off",3,"name","autofocus"],["ref",""]],template:function(e,o){1&e&&(r.\u0275\u0275elementStart(0,"textarea",0,1),r.\u0275\u0275text(2,"    "),r.\u0275\u0275elementEnd()),2&e&&(r.\u0275\u0275classMapInterpolate1("ngx-codemirror ",o.className,""),r.\u0275\u0275classProp("ngx-codemirror--focused",o.isFocused),r.\u0275\u0275property("name",o.name)("autofocus",o.autoFocus))},encapsulation:2,changeDetection:0}),i.ctorParameters=()=>[{type:r.KeyValueDiffers},{type:r.NgZone}],i.propDecorators={className:[{type:r.Input}],name:[{type:r.Input}],autoFocus:[{type:r.Input}],options:[{type:r.Input}],preserveScrollPosition:[{type:r.Input}],cursorActivity:[{type:r.Output}],focusChange:[{type:r.Output}],scroll:[{type:r.Output}],drop:[{type:r.Output}],ref:[{type:r.ViewChild,args:["ref",{static:!0}]}]};class s{}s.\u0275fac=function(e){return new(e||s)},s.\u0275mod=r.\u0275\u0275defineNgModule({type:s}),s.\u0275inj=r.\u0275\u0275defineInjector({})}}]);