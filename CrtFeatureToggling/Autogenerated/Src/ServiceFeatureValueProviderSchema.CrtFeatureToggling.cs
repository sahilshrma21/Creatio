namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ServiceFeatureValueProviderSchema

	/// <exclude/>
	public class ServiceFeatureValueProviderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ServiceFeatureValueProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ServiceFeatureValueProviderSchema(ServiceFeatureValueProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b971adc8-ef04-4395-b964-2e9c440c6840");
			Name = "ServiceFeatureValueProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,84,193,78,227,48,16,61,7,137,127,152,21,151,84,138,92,246,10,109,17,2,218,141,196,178,72,192,94,87,110,50,41,22,142,157,181,157,162,10,241,239,107,59,113,155,166,165,44,167,196,51,111,102,222,188,25,91,208,18,117,69,51,132,71,84,138,106,89,24,114,37,69,193,22,181,162,134,73,113,124,244,118,124,20,213,154,137,5,60,172,180,193,242,188,119,182,120,206,49,115,96,77,102,40,80,177,108,7,115,203,196,223,141,241,74,161,75,78,166,246,83,43,124,148,139,5,183,246,79,1,228,94,201,37,203,81,233,13,180,203,187,44,165,216,239,81,184,177,119,147,226,3,170,37,179,237,143,63,172,185,37,71,240,182,97,54,169,77,123,162,112,97,125,112,197,169,214,103,208,250,90,228,111,202,107,12,188,61,124,56,28,194,72,215,101,73,213,106,210,158,3,141,162,9,130,165,139,130,170,13,35,33,106,216,9,171,234,57,103,25,100,174,232,161,154,112,6,251,169,68,111,158,206,154,254,148,33,207,45,255,123,197,150,212,96,227,172,154,3,88,113,114,41,248,106,191,122,127,138,45,89,172,154,251,96,36,21,218,80,17,100,139,78,80,228,77,237,109,34,63,209,60,75,207,196,183,216,56,125,255,76,60,219,245,50,185,204,96,56,241,244,26,17,228,210,206,218,118,5,76,24,152,161,9,83,50,150,122,252,164,81,217,33,138,102,71,161,222,58,38,160,141,114,91,145,201,28,19,152,213,44,7,189,210,151,121,201,196,147,96,38,205,7,224,110,64,20,205,165,228,192,244,141,160,115,142,185,109,113,27,70,82,125,83,86,102,21,15,60,58,186,8,18,184,75,97,210,16,23,187,58,45,228,236,0,36,233,179,56,247,49,10,45,94,116,104,92,192,119,59,224,83,239,125,255,138,82,215,204,247,111,151,105,212,40,144,56,241,38,125,245,244,97,249,130,56,45,175,222,30,144,77,50,29,15,200,163,220,20,141,95,96,60,129,23,114,103,31,160,4,150,238,176,36,105,191,173,193,215,251,186,101,218,140,218,162,169,40,100,183,35,237,12,255,215,80,218,205,115,141,58,83,172,50,82,77,32,95,255,107,187,3,7,27,110,70,182,75,104,78,53,118,25,217,60,206,68,250,68,123,204,154,116,133,125,203,104,246,12,241,14,183,240,120,116,44,76,116,249,134,222,34,86,64,220,39,65,166,76,105,243,75,93,99,65,107,110,226,194,141,164,176,175,159,213,116,60,222,205,237,39,55,128,111,99,16,53,231,235,212,81,38,133,97,162,198,134,173,155,157,251,236,84,179,79,1,42,19,159,38,32,240,21,58,242,172,19,165,238,142,185,251,72,238,240,213,125,227,65,210,186,26,82,31,112,10,32,247,255,41,40,152,221,34,236,195,118,252,33,228,50,51,53,229,254,114,236,13,217,89,226,16,248,131,106,31,53,149,106,166,100,93,217,104,163,106,108,117,106,199,251,222,189,78,125,213,186,183,161,247,120,54,214,109,163,183,253,3,92,207,218,48,226,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b971adc8-ef04-4395-b964-2e9c440c6840"));
		}

		#endregion

	}

	#endregion

}

