(self.webpackChunkapp_studio_enterprise_schema_view=self.webpackChunkapp_studio_enterprise_schema_view||[]).push([[1091],{13797:(Fe,H,i)=>{i.r(H),i.d(H,{FolderTreeActiveFolderChangedHandler:()=>g,FolderTreeAddFolderDataHandler:()=>_,FolderTreeConvertToStaticFolderHandler:()=>f,FolderTreeCopyFolderDataHandler:()=>S,FolderTreeDeleteFolderDataHandler:()=>C,FolderTreeExpandedItemsHandler:()=>M,FolderTreeModule:()=>y,FolderTreeRenameHandler:()=>I,FolderTreeToggleFolderFavoriteHandler:()=>R,FolderTreeUpdateFiltersHandler:()=>A,FolderTreeVisibleHandler:()=>w});var d=i(74742),O=i(31134),n=i(75378),E=i(33177),m=i(34038),h=i(8239),p=i(49475),V=i(52045),T=i(97600),a=i(21322);let g=class extends n.BaseRequestHandler{constructor(e,t){super(),this._folderTreeUserProfileService=e,this._schemaPartsService=t}_isNeedSaveToProfile(e){const t=e.$context,{activeFolderIdAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=this._prepareFolderId(t.attributes[r]),l=this._prepareFolderId(e.id);return o!==l}_prepareFolderId(e){return e||""}_clearRelatedDataGridCollection(e,t,r){const o={type:"crt.DataGridClearCollectionsForChangedDesignSettingsRequest",$context:r.$context,dataGridName:e,scopes:r.scopes,previousDesignSetting:t?.previous,currentDesignSetting:t?.current};return this.handlerChain.process(o)}_setDataGridActiveFolderSettingsAttribute(e,t,r){const o=(0,m.createDataGridActiveFolderSettingsAttributeName)({name:e});return r.set(o,t)}_getChangedDataGridActiveFolderSettings(e){var t=this;return(0,h.Z)(function*(){const r={$context:e.$context,folderTreeName:e.folderTreeName,type:"crt.DataGridCheckActiveFolderSettingsChangesRequest",scopes:e.scopes,folderId:e.folderTreeId};return yield t.handlerChain.process(r)})()}_applyNewRelatedDataGridColumns(e,t){var r=this;return(0,h.Z)(function*(){yield Promise.all(Object.entries(t).map(function(){var o=(0,h.Z)(function*([l,x]){yield r._clearRelatedDataGridCollection(l,x,e),yield r._setDataGridActiveFolderSettingsAttribute(l,x.current,e.$context)});return function(l){return o.apply(this,arguments)}}())),yield r._schemaPartsService.commit({silent:!1})})()}_updateViewModel(e){var t=this;return(0,h.Z)(function*(){const r=e.$context,o=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),l=yield t._getFolderFilter(e);return(0,a.lastValueFrom)(r.setValue({[e.activeFolderIdAttrName??o.activeFolderIdAttrName]:e.id,[o.activeFolderFolderTreeIdAttrName]:e.folderTreeId,[e.activeFolderNameAttrName??o.activeFolderNameAttrName]:e.name,[o.activeFolderFilterDataAttrName]:l,[e.activeFolderFavoriteStateAttrName??o.activeFolderFavoriteStateAttrName]:e.isFavorite}),{defaultValue:null})})()}_getFolderFilter(e){return(0,m.isStaticFolder)(e.folderTypeId)?(0,m.createStaticFolderFilter)(e.folderTreeId,e.rootSchemaName):Promise.resolve(e.filterData)}handle(e){var t=this;return(0,h.Z)(function*(){t._isNeedSaveToProfile(e)&&(yield t._folderTreeUserProfileService.setFolderTreeSelectedNode({folderTreeName:e.folderTreeName,id:e.id,activeFolderFolderTreeId:e.folderTreeId,isFavorite:e.isFavorite}));const r=yield t._getChangedDataGridActiveFolderSettings(e);return(0,T.isEmpty)(r)?t._updateViewModel(e):(yield t._updateViewModel(e),t._applyNewRelatedDataGridColumns(e,r))})()}};g=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeActiveFolderChangedHandler",requestType:"crt.FolderTreeActiveFolderChangedRequest"}),(0,d.__metadata)("design:paramtypes",[m.FolderTreeUserProfileService,V.SchemaPartsService])],g);var s=i(94450),N=i(24709),P=i(2876),U=i(77207);class u{constructor(){this._userInfo=(0,s.inject)(p.UserInfo),this._featureValues=(0,s.inject)(p.FEATURE_VALUES),this._httpClient=(0,s.inject)(P.HttpClient),this._translateService=(0,s.inject)(U.TranslateService),this._serviceEndpoint=(this._userInfo.isSSP?"ssp/":"")+"rest/FolderManagerService/"}_asyncConvert(e){return this._callService("ConvertToStaticFolder",{newFolderId:e.newFolderId,parentFolderId:e.parentFolderId,entitySchemaName:e.rootSchemaName}).pipe((0,a.map)(t=>(t?.success&&(t.additionalNotification=this._translateService.instant("StaticFolderConvertor.AsyncConvertMessage")),t)))}_convert(e){return this._callService("ConvertFolder",{newFolderId:e.newFolderId,parentFolderId:e.parentFolderId,entitySchemaName:e.rootSchemaName}).pipe((0,a.map)(t=>((0,T.isEmpty)(t)&&(t={success:!0}),t)))}_deleteFolders(e){return this._callService("DeleteFolder",{sourceSchemaName:e.sourceSchemaName,records:e.folderIds})}_callService(e,t){const r=`${this._serviceEndpoint}${e}`,o=`${e}Result`;return this._httpClient.post(r,t).pipe((0,a.map)(l=>this._getServiceResultFromResponse(l,o)),(0,a.catchError)(l=>this._catchHttpErrorResponse(l)))}_getServiceResultFromResponse(e,t){return t in(e||{})?e[t]:e}_catchHttpErrorResponse(e){return(0,a.of)({success:!1,errorInfo:{message:e.error?.errorInfo?.message??e.message}})}convertToStatic(e){return this._featureValues.ConvertDynamicToStaticFolderByChunk?this._asyncConvert(e):this._convert(e)}deleteFolders(e){return this._deleteFolders(e)}}u.\u0275fac=function(e){return new(e||u)},u.\u0275prov=s.\u0275\u0275defineInjectable({token:u,factory:u.\u0275fac});var D=i(99293),F=i(27049);class v{constructor(e,t){this._ngZone=e,this._dialogService=t}_handleError(e,t,r){const o=r.process({type:"crt.FolderTreeActiveFolderChangedRequest",folderTreeName:t.folderTreeName,$context:t.$context});return this._ngZone.run(()=>this._dialogService.openInfoDialog(e.message)).pipe((0,F.switchMap)(()=>o),(0,F.switchMap)(()=>this._setShowMask(!1,t)),(0,F.switchMap)(()=>(0,a.of)({success:!1})))}_setShowMask(e,t){const r=t.$context,{showMaskAttrName:o}=(0,p.buildFolderTreeAttributeNames)(t.folderTreeName);return r.setValue({[o]:e})}_getErrorMessage(e){const t=e.errorInfo;return e.message||((0,T.isString)(t)?t:t.message)}_reloadFavoritesDataSource(e){if(!e.reloadFavorites)return(0,a.of)({});const t=e.$context,{favoriteItemsAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=t.getBoundDataSourceNameByAttributePath(r);return t.load(o,[],{loadType:n.DataSourceLoadType.Reload})}handle(e,t,r){return(0,a.lastValueFrom)(this._setShowMask(!0,t).pipe((0,F.switchMap)(()=>e),(0,F.switchMap)(o=>this._reloadFavoritesDataSource(t).pipe((0,F.map)(()=>o))),(0,F.switchMap)(o=>o.success?this._setShowMask(!1,t):(0,a.throwError)(()=>new Error(this._getErrorMessage(o)))),(0,F.switchMap)(()=>(0,a.of)({success:!0})),(0,F.catchError)(o=>this._handleError(o,t,r))))}}v.\u0275fac=function(e){return new(e||v)(s.\u0275\u0275inject(s.NgZone),s.\u0275\u0275inject(D.DialogService))},v.\u0275prov=s.\u0275\u0275defineInjectable({token:v,factory:v.\u0275fac,providedIn:"any"});class b extends n.BaseRequestHandler{constructor(e){super(),this.folderTreeModelRequestService=e.get(v)}insertModel(e){return N.Model.create(e.sourceSchemaName).pipe((0,a.switchMap)(t=>{let r={Id:e.folderId,Name:e.folderName,Parent:e.parentId};return(0,m.isOldSourceSchema)(e.sourceSchemaName)?r={...r,FolderType:e.folderTypeId||m.DYNAMIC_FOLDER_TYPE_ID,SearchData:e.filterData}:r={...r,EntitySchemaName:e.rootSchemaName,FilterData:e.filterData},t.insert(r)}))}}let _=class extends b{constructor(e){super(e)}handle(e){return this.folderTreeModelRequestService.handle(this.insertModel(e),e,this.handlerChain)}};_.\u0275fac=function(e){return new(e||_)(s.\u0275\u0275inject(s.Injector))},_.\u0275prov=s.\u0275\u0275defineInjectable({token:_,factory:_.\u0275fac,providedIn:"any"}),_=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeAddFolderDataHandler",requestType:"crt.AddFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],_);let f=class extends n.BaseRequestHandler{constructor(e,t,r){super(),this._folderManagerService=e,this._notifyService=t,this._maskService=r}_addNewFolder(e){return this.handlerChain.process({...e,type:"crt.AddFolderDataRequest"})}_convert(e){return this._showLoadingMask(e),(0,a.lastValueFrom)(this._folderManagerService.convertToStatic({newFolderId:e.folderId,parentFolderId:e.parentId,rootSchemaName:e.rootSchemaName}).pipe((0,a.tap)(()=>this._hideLoadingMask(e))))}_showLoadingMask(e){this._maskService.showMask(this._getTaskName(e.rootSchemaName),e.$context)}_hideLoadingMask(e){this._maskService.hideMask(this._getTaskName(e.rootSchemaName),e.$context)}_getTaskName(e){return`ConvertToStaticFolder_${e}`}_notify(e){let t="";if(e.success&&e.additionalNotification)t=e.additionalNotification;else if(!e.success)t=e.errorInfo?.message;else return;this._notifyService.show({message:t,translate:!1})}handle(e){var t=this;return(0,h.Z)(function*(){if(!(yield t._addNewFolder(e)).success)return;const o=yield t._convert(e);return t._notify(o),o})()}};f.\u0275fac=function(e){return new(e||f)(s.\u0275\u0275inject(u),s.\u0275\u0275inject(D.NotifyService),s.\u0275\u0275inject(n.MaskService))},f.\u0275prov=s.\u0275\u0275defineInjectable({token:f,factory:f.\u0275fac}),f=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeConvertToStaticFolderHandler",requestType:"crt.ConvertToStaticFolderRequest"}),(0,d.__param)(2,(0,n.CrtInject)(p.DEVKIT_MASK_SERVICE)),(0,d.__metadata)("design:paramtypes",[u,D.NotifyService,n.MaskService])],f);var j=i(41307);let S=class extends b{constructor(e){super(e),this._rightsService=e.get(j.RightsService),this._folderTreeRelatedElementConfigsRepository=e.get(j.FolderTreeRelatedElementConfigsRepository),this._featureValues=e.get(p.FEATURE_VALUES)}_copyRelatedElementConfigs(e,t){return!t||this._featureValues.DisableDataGridSettingsByFolders?(0,a.of)({success:!1}):this._folderTreeRelatedElementConfigsRepository.copy(e,t)}_copyRights(e){return!e.copyRights||!e.folderId?(0,a.of)({}):this._rightsService.copyRights({schemaName:e.sourceSchemaName,sourceId:e.sourceId,targetId:e.folderId,options:{overwrite:!1}})}_revertRelatedElementConfigs(e){return(0,a.lastValueFrom)(this._folderTreeRelatedElementConfigsRepository.delete({folderId:e.folderId}))}_createCopyFolderModelRequest(e){return this._copyRelatedElementConfigs(e.sourceId,e.folderId).pipe((0,F.switchMap)(()=>this.insertModel(e)),(0,F.switchMap)(t=>this._copyRights(e).pipe((0,F.map)(()=>t))))}handle(e){var t=this;return(0,h.Z)(function*(){const r=yield t.folderTreeModelRequestService.handle(t._createCopyFolderModelRequest(e),e,t.handlerChain);return r.success||(yield t._revertRelatedElementConfigs(e)),Promise.resolve(r)})()}};S.\u0275fac=function(e){return new(e||S)(s.\u0275\u0275inject(s.Injector))},S.\u0275prov=s.\u0275\u0275defineInjectable({token:S,factory:S.\u0275fac}),S=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeCopyFolderDataHandler",requestType:"crt.CopyFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],S);let C=class extends n.BaseRequestHandler{constructor(e){super(),this._folderTreeModelRequestService=e.get(v),this._folderManagerService=e.get(u)}_createDeleteFolderRequest(e){return(0,m.isOldSourceSchema)(e.sourceSchemaName)?this._createDeleteOldFolderRequest(e):this._createDeleteNewFolderRequest(e)}_createDeleteOldFolderRequest(e){return this._folderManagerService.deleteFolders({sourceSchemaName:e.sourceSchemaName,folderIds:[e.folderId]}).pipe((0,a.map)(t=>({success:t.success,errorInfo:t.errorInfo?.message,rowsAffected:t.success?1:0})))}_createDeleteNewFolderRequest(e){return e.$context.delete(e.dataSourceName,[{type:n.ModelParameterType.PrimaryColumnValue,value:e.folderId}])}_removeFolderFromItemViewModel(e){return(0,h.Z)(function*(){if(!e.folderId)return Promise.resolve();const t=e.$context,{itemsAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=yield t[r],l=yield o.findByPrimaryAttribute(e.folderId);return l?o.remove(l):Promise.resolve()})()}_createDeleteFolderRequestWithUpdateViewModel(e){return this._createDeleteFolderRequest(e).pipe((0,a.switchMap)(t=>t.success?(0,a.from)(this._removeFolderFromItemViewModel(e)).pipe((0,a.map)(()=>t)):(0,a.of)(t)))}handle(e){return this._folderTreeModelRequestService.handle(this._createDeleteFolderRequestWithUpdateViewModel(e),e,this.handlerChain)}};C=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeDeleteFolderDataHandler",requestType:"crt.DeleteFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],C);let M=class extends n.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_isNeedSaveToProfile(e){const t=e.$context,{expandedItemsAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName);let o=t.attributes[r];o=this._prepareExpandedItems(o);const l=this._prepareExpandedItems(e.expandedItems);return!(0,T.isEqual)(o,l)}_prepareExpandedItems(e){return e?.filter(t=>![m.VIRTUAL_ROOT_NODE_ID,m.VIRTUAL_FAVORITE_ROOT_NODE_ID].includes(t))||[]}handle(e){var t=this;return(0,h.Z)(function*(){t._isNeedSaveToProfile(e)&&(yield t._folderTreeUserProfileService.setFolderTreeExpandedItems(e.folderTreeName,e.expandedItems));const r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=e.$context;return(0,a.firstValueFrom)(o.setValue({[r.expandedItemsAttrName]:e.expandedItems}))})()}};M=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeExpandedItemsHandler",requestType:"crt.FolderTreeExpandedItemsRequest"}),(0,d.__metadata)("design:paramtypes",[m.FolderTreeUserProfileService])],M);let I=class extends n.BaseRequestHandler{constructor(e){super(),this._folderTreeModelRequestService=e.get(v)}handle(e){var t=this;return(0,h.Z)(function*(){const o=(yield(0,a.lastValueFrom)(N.Model.create(e.sourceSchemaName))).update({Name:e.folderName},[{type:n.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return t._folderTreeModelRequestService.handle(o,e,t.handlerChain)})()}};I=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeRenameHandler",requestType:"crt.FolderTreeRenameRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],I);let R=class extends n.BaseRequestHandler{_getEntitySchemaUId(e){return this._entitySchemaService.getEntitySchemaByName(e).pipe((0,F.map)(t=>t.entitySchema.uId))}_insertFolder(e,t){return this._getDtoForInsert(e).pipe((0,a.switchMap)(r=>t.insert(r)))}_getDtoForInsert(e){return(0,m.isOldSourceSchema)(e.sourceSchemaName)?this._getEntitySchemaUId(e.sourceSchemaName).pipe((0,F.map)(t=>({FolderId:e.id,FolderEntitySchemaUId:t}))):(0,a.of)({FolderTree:e.id,EntitySchemaName:e.rootSchemaName})}_deleteFolder(e,t){return t.delete([{type:n.ModelParameterType.PrimaryColumnValue,value:e.favoriteId}])}constructor(e){super(),this._injector=e,this._entitySchemaService=this._injector.get(p.EntitySchemaService),this._folderTreeModelRequestService=this._injector.get(v)}_createToggleFavoriteFolderModelRequest(e){const t=(0,m.isOldSourceSchema)(e.sourceSchemaName)?m.OLD_FOLDER_TREE_FAVORITE_SCHEMA_NAME:m.DEFAULT_FOLDER_TREE_FAVORITE_SCHEMA_NAME;return N.Model.create(t).pipe((0,a.switchMap)(r=>e.status?this._insertFolder(e,r):this._deleteFolder(e,r)))}handle(e){return this._folderTreeModelRequestService.handle(this._createToggleFavoriteFolderModelRequest(e),e,this.handlerChain)}};R=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.ToggleFolderFavoriteHandler",requestType:"crt.ToggleFolderFavoriteRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],R);let A=class extends n.BaseRequestHandler{constructor(e){super(),this._folderTreeModelRequestService=e.get(v)}_createUpdateFolderTreeModelRequest(e){let t={};return(0,m.isOldSourceSchema)(e.sourceSchemaName)?t={SearchData:e.filterData}:t={FilterData:e.filterData},N.Model.create(e.sourceSchemaName).pipe((0,a.switchMap)(r=>r.update(t,[{type:n.ModelParameterType.PrimaryColumnValue,value:e.folderId}])),(0,a.mergeMap)(r=>r?.success?(0,a.from)(this._updateFilterData(e).then(()=>r)):(0,a.of)(r)))}_updateFilterData(e){return(0,h.Z)(function*(){const t=e.$context,r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName);yield(0,a.lastValueFrom)(t.setValue({[r.activeFolderFilterDataAttrName]:e.filterData}),{defaultValue:null})})()}handle(e){return this._folderTreeModelRequestService.handle(this._createUpdateFolderTreeModelRequest(e),e,this.handlerChain)}};A=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeUpdateFiltersHandler",requestType:"crt.FolderTreeUpdateFiltersRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],A);let w=class extends n.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_getIsIsFolderTreeVisible(e,t){return(0,h.Z)(function*(){const r=e.$context;let o=e.visible;if(e.togglePanel){let l=yield r[t];l=(0,T.isNil)(l)?!1:l,o=!l}return o})()}_setFolderTreeVisible(e,t,r,o){var l=this;return(0,h.Z)(function*(){return yield l._folderTreeUserProfileService.setFolderTreeVisibleState(o,t),e.set(r,t)})()}handle(e){var t=this;return(0,h.Z)(function*(){const r=e.$context,{visibleAttrName:o}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),l=yield t._getIsIsFolderTreeVisible(e,o);return t._setFolderTreeVisible(r,l,o,e.folderTreeName)})()}};w=(0,d.__decorate)([(0,n.CrtRequestHandler)({type:"crt.FolderTreeVisibleHandler",requestType:"crt.FolderTreeVisibleRequest"}),(0,d.__metadata)("design:paramtypes",[m.FolderTreeUserProfileService])],w);const J=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),L=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u0429\u0435 \u0432\u0438 \u0443\u0432\u0435\u0434\u043E\u043C\u0438\u043C, \u043A\u043E\u0433\u0430\u0442\u043E \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u0443\u0432\u0430\u043D\u0435\u0442\u043E \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0438."}}'),$=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),k=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),W=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Wir werden Sie benachrichtigen, wenn die Umwandlung abgeschlossen ist."}}'),B=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Le notificaremos cuando se complete la conversi\xF3n."}}'),G=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Nous vous informerons lorsque la conversion sera termin\xE9e."}}'),z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),K=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\xC9rtes\xEDtj\xFCk \xD6nt, ha az \xE1talak\xEDt\xE1s befejez\u0151d\xF6tt."}}'),Y=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Ti invieremo una notifica quando la conversione sar\xE0 completata."}}'),X=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ee=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),te=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),re=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Iremos notific\xE1-lo quando a convers\xE3o for conclu\xEDda."}}'),oe=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ae=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ne=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u044B \u0441\u043E\u043E\u0431\u0449\u0438\u043C \u0432\u0430\u043C, \u043A\u043E\u0433\u0434\u0430 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044F \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430."}}'),se=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),le=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),de=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ie=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ce=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u0438 \u043F\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C\u043E \u0432\u0430\u043C, \u043A\u043E\u043B\u0438 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0456\u044E \u0431\u0443\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E."}}'),me=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),he=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),pe={"hr-HR":J,"bg-BG":L,"ar-SA":$,"cs-CZ":k,"de-DE":W,"en-US":B,"es-ES":Z,"fr-FR":G,"he-IL":z,"hu-HU":K,"id-ID":Y,"it-IT":Q,"ja-JP":X,"ko-KR":q,"nl-NL":ee,"pl-PL":te,"pt-BR":re,"pt-PT":oe,"ro-RO":ae,"ru-RU":ne,"sq-AL":se,"sv-SE":le,"th-TH":de,"tr-TR":ie,"uk-UA":ce,"vi-VN":me,"zh-CN":he};let y=class{};y.\u0275fac=function(e){return new(e||y)},y.\u0275mod=s.\u0275\u0275defineNgModule({type:y}),y.\u0275inj=s.\u0275\u0275defineInjector({providers:[u,m.FolderTreeUserProfileService],imports:[O.CommonModule,E.CrtLibTranslateModule.forRoot({i18n:pe})]}),y=(0,d.__decorate)([(0,n.CrtModule)({requestHandlers:[g,_,C,M,I,R,A,w,S,f]})],y),function(){(typeof ngJitMode>"u"||ngJitMode)&&s.\u0275\u0275setNgModuleScope(y,{imports:[O.CommonModule,E.CrtLibTranslateModule]})}()}}]);
