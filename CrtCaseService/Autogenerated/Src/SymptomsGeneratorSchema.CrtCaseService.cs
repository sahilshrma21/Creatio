namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: SymptomsGeneratorSchema

	/// <exclude/>
	public class SymptomsGeneratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SymptomsGeneratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SymptomsGeneratorSchema(SymptomsGeneratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("329987ff-77ba-409b-96ae-cbb425a36b31");
			Name = "SymptomsGenerator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("77fa8847-960e-4748-ad77-e37bb90e03a0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,85,77,79,27,49,16,61,7,137,255,96,45,151,32,69,27,169,71,8,161,40,138,104,84,65,105,72,123,41,61,56,187,147,101,219,181,189,29,219,41,43,196,127,239,216,222,47,22,21,218,75,148,153,188,121,243,60,243,236,72,46,64,151,60,1,182,1,68,174,213,206,196,11,37,119,121,102,145,155,92,201,195,131,199,195,131,145,213,185,204,216,109,165,13,136,211,65,76,248,162,128,196,129,117,124,9,18,48,79,94,96,54,240,96,226,53,100,182,224,184,124,40,17,180,118,248,14,183,80,66,40,217,143,17,158,71,241,82,154,220,228,224,138,232,135,35,132,140,40,216,162,224,90,159,80,31,81,26,37,180,23,192,141,66,15,42,237,182,200,19,150,56,204,75,8,59,97,171,43,158,160,210,43,185,87,63,249,182,0,170,113,231,109,217,175,192,220,171,84,19,242,6,149,161,83,66,234,137,71,211,233,148,205,180,21,130,99,53,111,18,151,96,52,75,184,6,150,167,108,135,74,48,142,153,21,32,13,83,219,31,84,29,183,165,211,97,237,172,228,200,5,147,180,144,179,168,41,139,230,23,3,130,217,212,227,186,50,4,99,81,234,249,26,18,133,41,53,38,72,147,115,160,178,209,205,246,57,26,203,11,118,105,73,29,73,93,144,208,85,58,14,196,173,210,99,230,7,48,218,115,100,232,57,91,9,103,221,113,184,102,31,161,250,202,11,11,55,60,199,153,54,72,123,154,120,238,249,249,169,103,8,42,6,36,241,7,174,125,25,59,31,254,226,211,225,147,230,237,152,226,37,109,172,242,108,79,97,236,71,32,211,176,154,58,174,247,68,219,41,1,157,59,220,170,252,214,95,217,211,23,13,200,18,37,101,176,237,95,182,82,155,199,129,23,45,118,24,134,97,101,96,194,153,117,253,229,13,185,61,91,189,165,117,29,118,201,194,132,217,222,143,103,71,230,21,222,185,255,235,40,221,89,74,255,131,167,180,45,76,221,122,232,171,48,157,90,22,217,41,220,36,191,190,161,167,116,99,42,111,189,196,251,142,220,212,121,176,3,158,182,230,3,253,139,48,18,126,51,127,241,171,219,228,30,4,255,108,1,171,241,243,37,196,125,192,21,151,60,3,156,176,200,113,71,53,33,145,197,23,105,74,79,149,21,114,28,53,79,65,212,235,231,100,5,34,106,235,240,36,47,196,131,118,147,250,4,189,90,93,243,81,101,71,227,8,54,85,9,117,87,63,153,250,162,204,95,74,200,119,108,220,208,196,43,125,173,204,181,45,138,79,232,175,192,248,184,153,224,168,215,138,222,83,120,160,87,181,44,232,1,111,139,39,236,125,244,237,14,239,228,247,199,119,147,167,136,6,225,130,166,77,191,190,109,215,80,4,36,85,204,182,200,166,243,232,56,222,96,46,150,50,29,55,153,120,163,22,247,28,47,232,191,194,137,10,156,79,253,235,222,144,190,114,13,66,246,121,146,114,127,0,230,219,188,99,140,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("329987ff-77ba-409b-96ae-cbb425a36b31"));
		}

		#endregion

	}

	#endregion

}

